{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1kEbk5PBK7aqtLXLsc6m5Iub2brRWQJ_E","timestamp":1745748482508},{"file_id":"1i9qN1El0I2bhdqIBuyF6_ymChBS_4Hnz","timestamp":1745748436622}],"authorship_tag":"ABX9TyMYNEu2BQlZqzmUCd+Prh4A"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# 1. Import libraries\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso\n","from sklearn.ensemble import RandomForestRegressor\n","from xgboost import XGBRegressor\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","import joblib\n","\n","# 2. Load data\n","data = pd.read_csv('india_housing_prices_100.csv')  # replace with your dataset path\n","print(data.head())\n","\n","# --- Immediately make sure 'Sale_price' is numeric ---\n","if 'Sale_price' not in data.columns:\n","    raise KeyError(\"'Sale_price' column is missing from the dataset.\")\n","\n","data['Sale_price'] = pd.to_numeric(data['Sale_price'], errors='coerce')\n","\n","# 3. Preprocessing\n","# Handle missing values\n","numeric_data = data.select_dtypes(include=np.number)\n","data[numeric_data.columns] = data[numeric_data.columns].fillna(numeric_data.mean())\n","\n","# Encoding categorical variables\n","categorical_cols = data.select_dtypes(include=['object']).columns.tolist()\n","data = pd.get_dummies(data, columns=categorical_cols)\n","\n","\n","# --- The fix is below ---\n","# Ensure 'Sale_price' is in the DataFrame and is numeric\n","if 'Sale_price' not in data.columns:\n","    raise KeyError(\"The 'Sale_price' column is missing from the DataFrame. \"\n","                   \"Check if it was present in the original data and \"\n","                   \"not removed unintentionally during preprocessing.\")\n","# Convert 'Sale_price' to numeric if it's not already\n","# Use errors='coerce' to convert non-numeric values to NaN\n","data['Sale_price'] = pd.to_numeric(data['Sale_price'], errors='coerce')\n","# If there are any non-numeric values, they will be converted to NaN,\n","# and you can decide how to handle them (e.g., imputation or removal).\n","# For example, to remove rows with NaN 'SalePrice':\n","# data.dropna(subset=['Sale_price'], inplace=True)\n","# --- End of fix ---\n","\n","# Feature-Target split\n","# Now 'Sale_price' should be present and can be dropped from X\n","X = data.drop('Sale_price', axis=1)\n","y = data['Sale_price']\n","\n","# Train-Test split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Feature Scaling\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","\n","# 4. Models to try\n","models = {\n","    'Linear Regression': LinearRegression(),\n","    'Ridge Regression': Ridge(),\n","    'Lasso Regression': Lasso(),\n","    'Random Forest': RandomForestRegressor(),\n","    'XGBoost': XGBRegressor(objective='reg:squarederror')\n","}\n","\n","# 5. Training and Evaluation\n","results = {}\n","\n","for name, model in models.items():\n","    model.fit(X_train, y_train)\n","    preds = model.predict(X_test)\n","    r2 = r2_score(y_test, preds)\n","    rmse = np.sqrt(mean_squared_error(y_test, preds))\n","    mae = mean_absolute_error(y_test, preds)\n","    results[name] = {'R2': r2, 'RMSE': rmse, 'MAE': mae}\n","    print(f\"{name} - R2: {r2:.4f}, RMSE: {rmse:.2f}, MAE: {mae:.2f}\")\n","\n","# 6. Choose the best model\n","best_model_name = max(results, key=lambda x: results[x]['R2'])\n","print(f\"\\nBest Model: {best_model_name}\")\n","\n","# 7. Save the model\n","best_model = models[best_model_name]\n","joblib.dump(best_model, 'best_house_price_model.pkl')\n","print(\"\\nModel saved successfully as 'best_house_price_model.pkl'!\")\n","\n","# 8. Plotting performance\n","result_df = pd.DataFrame(results).T\n","result_df[['R2']].plot(kind='bar', title='Model Comparison (R2 Score)', legend=False)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"cnW3YKAzoalP","executionInfo":{"status":"ok","timestamp":1745748037270,"user_tz":-330,"elapsed":1118,"user":{"displayName":"GIRIDHARAN","userId":"15044917795974056578"}},"outputId":"e14b80a3-5b3f-4c95-8214-31b098d5e875"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   ID        State      City      Locality      Property_Type  BHK  \\\n","0   1   Tamil Nadu   Chennai   Locality_84          Apartment    1   \n","1   2  Maharashtra      Pune  Locality_490  Independent House    3   \n","2   3       Punjab  Ludhiana  Locality_167          Apartment    2   \n","3   4    Rajasthan   Jodhpur  Locality_393  Independent House    2   \n","4   5    Rajasthan    Jaipur  Locality_466              Villa    4   \n","\n","   Size_in_SqFt  Sale_price  Price_per_SqFt  Year_Built  ... Age_of_Property  \\\n","0          4740      489.76            0.10        1990  ...              35   \n","1          2364      195.52            0.08        2008  ...              17   \n","2          3642      183.79            0.05        1997  ...              28   \n","3          2741      300.29            0.11        1991  ...              34   \n","4          4823      182.90            0.04        2002  ...              23   \n","\n","   Nearby_Schools  Nearby_Hospitals  Public_Transport_Accessibility  \\\n","0              10                 3                            High   \n","1               8                 1                             Low   \n","2               9                 8                             Low   \n","3               5                 7                            High   \n","4               4                 9                             Low   \n","\n","   Parking_Space  Security                                 Amenities Facing  \\\n","0             No        No  Playground, Gym, Garden, Pool, Clubhouse   West   \n","1             No       Yes  Playground, Clubhouse, Pool, Gym, Garden  North   \n","2            Yes        No          Clubhouse, Pool, Playground, Gym  South   \n","3            Yes       Yes  Playground, Clubhouse, Gym, Pool, Garden  North   \n","4             No       Yes  Playground, Garden, Gym, Pool, Clubhouse   East   \n","\n","  Owner_Type Availability_Status  \n","0      Owner       Ready_to_Move  \n","1    Builder  Under_Construction  \n","2     Broker       Ready_to_Move  \n","3    Builder       Ready_to_Move  \n","4    Builder       Ready_to_Move  \n","\n","[5 rows x 23 columns]\n","Linear Regression - R2: -0.3439, RMSE: 175.21, MAE: 150.56\n","Ridge Regression - R2: -0.3424, RMSE: 175.11, MAE: 150.50\n","Lasso Regression - R2: -0.2852, RMSE: 171.34, MAE: 143.76\n","Random Forest - R2: 0.6783, RMSE: 85.72, MAE: 75.62\n","XGBoost - R2: 0.7768, RMSE: 71.40, MAE: 57.25\n","\n","Best Model: XGBoost\n","\n","Model saved successfully as 'best_house_price_model.pkl'!\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}